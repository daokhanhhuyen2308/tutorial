{"ast":null,"code":"import axios from \"axios\";\nconst http = axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});\nclass TutorialService {\n  async getAll() {\n    try {\n      const response = await http.get(\"/tutorials\");\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async get(id) {\n    try {\n      const response = await http.get(`/tutorials/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async create(data) {\n    try {\n      const response = await http.post(\"/tutorials\", data);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async update(id, data) {\n    try {\n      const response = await http.put(`/tutorials/${id}`, data);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async delete(id) {\n    try {\n      const response = await http.delete(`/tutorials/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async deleteAll() {\n    try {\n      const response = await http.delete(`/tutorials`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async findByTitle(title) {\n    try {\n      const response = await http.get(`/tutorials?title=${title}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\nexport default new TutorialService();","map":{"version":3,"names":["axios","http","create","baseURL","headers","TutorialService","getAll","response","get","data","error","id","post","update","put","delete","deleteAll","findByTitle","title"],"sources":["D:/SELF_STUDY/REACT_AND_TS/tutorials_crud_reactandspringboot/src/service/TutorialService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst http = axios.create({\r\n    baseURL: \"http://localhost:8080/api\",\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n});\r\n\r\n\r\nclass TutorialService {\r\n    async getAll() {\r\n        try{\r\n            const response = await http.get(\"/tutorials\");\r\n            return response.data;\r\n\r\n        }catch(error){\r\n            throw error;\r\n        }\r\n\r\n    }\r\n    async get(id) {\r\n        try {\r\n            const response = await http.get(`/tutorials/${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async create(data) {\r\n        try {\r\n            const response = await http.post(\"/tutorials\", data);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async update(id, data) {\r\n        try {\r\n            const response = await http.put(`/tutorials/${id}`, data);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async delete(id) {\r\n        try {\r\n            const response = await http.delete(`/tutorials/${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async deleteAll() {\r\n        try {\r\n            const response = await http.delete(`/tutorials`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async findByTitle(title) {\r\n        try {\r\n            const response = await http.get(`/tutorials?title=${title}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n\r\nexport default new TutorialService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAAC;EACtBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAGF,MAAMC,eAAe,CAAC;EAClB,MAAMC,MAAMA,CAAA,EAAG;IACX,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAG,CAAC,YAAY,CAAC;MAC7C,OAAOD,QAAQ,CAACE,IAAI;IAExB,CAAC,QAAMC,KAAK,EAAC;MACT,MAAMA,KAAK;IACf;EAEJ;EACA,MAAMF,GAAGA,CAACG,EAAE,EAAE;IACV,IAAI;MACA,MAAMJ,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAG,CAAE,cAAaG,EAAG,EAAC,CAAC;MACnD,OAAOJ,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAEA,MAAMR,MAAMA,CAACO,IAAI,EAAE;IACf,IAAI;MACA,MAAMF,QAAQ,GAAG,MAAMN,IAAI,CAACW,IAAI,CAAC,YAAY,EAAEH,IAAI,CAAC;MACpD,OAAOF,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAIA,MAAMG,MAAMA,CAACF,EAAE,EAAEF,IAAI,EAAE;IACnB,IAAI;MACA,MAAMF,QAAQ,GAAG,MAAMN,IAAI,CAACa,GAAG,CAAE,cAAaH,EAAG,EAAC,EAAEF,IAAI,CAAC;MACzD,OAAOF,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAEA,MAAMK,MAAMA,CAACJ,EAAE,EAAE;IACb,IAAI;MACA,MAAMJ,QAAQ,GAAG,MAAMN,IAAI,CAACc,MAAM,CAAE,cAAaJ,EAAG,EAAC,CAAC;MACtD,OAAOJ,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAEA,MAAMM,SAASA,CAAA,EAAG;IACd,IAAI;MACA,MAAMT,QAAQ,GAAG,MAAMN,IAAI,CAACc,MAAM,CAAE,YAAW,CAAC;MAChD,OAAOR,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAEA,MAAMO,WAAWA,CAACC,KAAK,EAAE;IACrB,IAAI;MACA,MAAMX,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAG,CAAE,oBAAmBU,KAAM,EAAC,CAAC;MAC5D,OAAOX,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;AACJ;AAEA,eAAe,IAAIL,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}